{"version":3,"file":"static/chunks/2.js","sources":["webpack:///./components/splitter/index.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/es6.string.includes.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/react-splitter-layout/lib/index.js"],"sourcesContent":["import SplitterLayout from 'react-splitter-layout'\r\nimport 'react-splitter-layout/lib/index.css'\r\nimport React, { Component } from 'react'\r\nimport { Icon } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport './index.less'\r\n\r\nconst splitterLineSize = 16,\r\n    // 缓存中的标识，含有'disabledDrag'时只有主板块\r\n    disabledDrag = 'disabledDrag';\r\n\r\nexport default class Splitter extends Component {\r\n    static defaultProps = {\r\n        storageName: null,\r\n        primaryIndex: 0,      // 默认主板块是第一个\r\n        primaryMinSize: 40,   // 默认主板块最小尺寸\r\n        secondaryMinSize: 40, // 默认次板块最小尺寸\r\n        vertical: false,      // 默认水平方向\r\n        showFold: false,      // 是否需要折叠区域，默认不显示\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n        props.showFold ? this.foldSize = 26 : this.foldSize = 0\r\n        this.state = {\r\n            primaryMinSize: props.primaryMinSize,\r\n            secondaryMinSize: props.secondaryMinSize,\r\n            // 次板块的索引。默认左边为主板块0， 右边为次板块1。通过修改 width 属性修改两块的大小，width 属性始终在次板块上 \r\n            secondaryIndex: this.secondaryIndex(),\r\n            secondaryInitialSize: this.getInitSize(),\r\n            // 当折叠时显示，展开时不显示。\r\n            // visibleFold: false,\r\n            // 是否显示次板块内容 \r\n            visibleContent: true,\r\n        }\r\n        this.splitter = React.createRef()\r\n    }\r\n    secondaryIndex = () => {\r\n        let secondaryIndex\r\n        this.props.primaryIndex === 0 ? secondaryIndex = 1 : secondaryIndex = 0\r\n        return secondaryIndex\r\n    }\r\n    // {return} 返回次板块的值\r\n    // 1. if 当存储的值存在且包含'disabledDrag'，此时次板块尺寸为0，需要禁止拖拽\r\n    // 2. elseif 存储的值存在，取值\r\n    // 3. elseif 当父组件传默认值，取父组件的值\r\n    // 4. 父组件没有默认值，返回 undefined\r\n    getInitSize = () => {\r\n        this.storageValue = localStorage.getItem(this.props.storageName)\r\n        const { secondaryInitialSize } = this.props\r\n        if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n            this.disabledDrag = true\r\n            return this.foldSize\r\n        } else if (this.storageValue) {\r\n            return parseInt(this.storageValue)\r\n        } else if (secondaryInitialSize) {\r\n            return parseInt(secondaryInitialSize)\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n    addButtonEvent = () => {\r\n        let direction, opposite\r\n        const { vertical } = this.props\r\n        const { secondaryIndex } = this.state\r\n        if (vertical) {\r\n            if (secondaryIndex === 1) {\r\n                if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n                    direction = 'top'\r\n                    opposite = 'bottom'\r\n                } else {\r\n                    direction = 'bottom'\r\n                    opposite = 'top'\r\n                }\r\n            } else if (secondaryIndex === 0) {\r\n                if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n                    direction = 'bottom'\r\n                    opposite = 'top'\r\n                } else {\r\n                    direction = 'top'\r\n                    opposite = 'bottom'\r\n                }\r\n            }\r\n            // 垂直预览的 className\r\n            this.previewClassName = 'preview-secondaryDom-vertical'\r\n            this.splitterButton.onclick = () => this.onSplitterButton(direction, opposite)\r\n        } else {\r\n            if (secondaryIndex === 1) {\r\n                if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n                    direction = 'left'\r\n                    opposite = 'right'\r\n                } else {\r\n                    direction = 'right'\r\n                    opposite = 'left'\r\n                }\r\n            } else if (secondaryIndex === 0) {\r\n                if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n                    direction = 'right'\r\n                    opposite = 'left'\r\n                } else {\r\n                    direction = 'left'\r\n                    opposite = 'right'\r\n                }\r\n            }\r\n            // 水平预览的 className\r\n            this.previewClassName = 'preview-secondaryDom-horizontal'\r\n            this.splitterButton.onclick = () => this.onSplitterButton(direction, opposite)\r\n        }\r\n        this.splitterButton.classList.add(direction)\r\n    }\r\n    onSplitterButton = (direction, opposite) => {\r\n        const { storageName } = this.props\r\n        const { visibleFold, visibleContent } = this.state\r\n        this.setState({ visibleFold: !visibleFold, visibleContent: !visibleContent })\r\n\r\n        if (this.secondaryDom.style[this.size] === `${this.foldSize}px`) {\r\n            this.disabledDrag = false\r\n            this.secondaryDom.style[this.size] = `${this[`secondary${this.upSize}`]}px`  // this.secondaryWidth, this.secondaryHeight\r\n            this.splitterLine.style.cssText = 'pointer-events: auto'\r\n        } else {\r\n            this.disabledDrag = true\r\n            // 存储次板块宽度，折叠宽度设置为提示面板的宽度\r\n            this[`secondary${this.upSize}`] = parseInt(this.secondaryDom.style[this.size])\r\n            // 收起次板块时保存尺寸，用于初次渲染时还原\r\n            storageName && localStorage.setItem(storageName, `${this[`secondary${this.upSize}`]}${disabledDrag}`)\r\n            this.secondaryDom.style[this.size] = `${this.foldSize}px`\r\n            this.splitterLine.style.cssText = 'pointer-events: none'\r\n            this.splitterButton.style.cssText = 'pointer-events: auto'\r\n            // fix：修改宽度为0，调整浏览器高度后，次板块宽度会改变为最小宽度。\r\n            this.setState({ secondaryMinSize: this.foldSize })\r\n        }\r\n\r\n        this.secondaryDom.classList.remove(this.previewClassName)\r\n        this.splitterButton.classList.remove(direction)\r\n        this.splitterButton.classList.add(opposite)\r\n        this.splitterButton.onclick = () => this.onSplitterButton(opposite, direction)\r\n\r\n    }\r\n    onFold = (direction) => {\r\n        const { visibleContent } = this.state\r\n        this.setState({ visibleContent: !visibleContent })\r\n        // 当次板块内容显示时，点击折叠收起内容。尺寸等于折叠面板\r\n        if (visibleContent) { \r\n            this.secondaryDom.style.cssText = `${this.size}: ${this.foldSize}px`\r\n            setTimeout(() => {\r\n                this.secondaryDom.classList.remove(this.previewClassName)\r\n            })\r\n        } else { // 当次板块内容不显示时，点击展开显示内容。尺寸还原\r\n            this.secondaryDom.classList.add(this.previewClassName)\r\n            this.secondaryDom.style.cssText = `${this.size}: ${this[`secondary${this.upSize}`]}` // width: this.secondaryWidth\r\n        }\r\n        // 设置展开时预览窗口的位置\r\n        document.querySelector(`.${this.previewClassName}`).style[`${direction}`] = 0   \r\n    }\r\n    // fix：解决不可拖拽时，按钮可拖拽的问题\r\n    onDragStart = () => {\r\n        let primaryMinSize, secondaryMinSize\r\n        // 当分割线不可拖拽时，设置主板块和次板块的最小尺寸，使之拖不动\r\n        if (this.disabledDrag) {\r\n            primaryMinSize = this.splitterSize - splitterLineSize - this.foldSize\r\n            secondaryMinSize = this.foldSize\r\n        } else {\r\n            primaryMinSize = this.props.primaryMinSize\r\n            secondaryMinSize = this.props.secondaryMinSize\r\n        }\r\n        this.setState({ primaryMinSize, secondaryMinSize })\r\n        this.props.onDragStart && this.props.onDragStart()\r\n    }\r\n    getSplitterSize = () => {\r\n        this.splitterSize = this.splitter.current.container[`client${this.upSize}`]\r\n        // 不能拖动时，次板块是0，\r\n        if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n            // fix: 设置次板块最小尺寸解决改变页面高度位置变化的问题\r\n            this.setState({\r\n                secondaryMinSize: this.foldSize,\r\n                visibleContent: false,\r\n            })\r\n            // 设置缓存中的尺寸用于还原\r\n            this[`secondary${this.upSize}`] = parseInt(this.storageValue)\r\n            this.splitterLine.style.cssText = 'pointer-events: none'\r\n            this.splitterButton.style.cssText = 'pointer-events: auto'\r\n        }\r\n    }\r\n    setGlobalVar = () => {\r\n        const { vertical } = this.props\r\n        const { secondaryIndex } = this.state\r\n        if (vertical) {\r\n            this.size = 'height'\r\n            this.upSize = 'Height'\r\n        } else {\r\n            this.size = 'width'\r\n            this.upSize = 'Width'\r\n        }\r\n        // 将分割线上的按钮 push 到分割线中\r\n        this.splitterLine = document.querySelector('.layout-splitter')\r\n        this.secondaryDom = document.querySelectorAll('.layout-pane')[secondaryIndex]\r\n        let img = document.createElement('img')\r\n        img.className = 'splitter-button'\r\n        // img.src = require('../../static/splitter-button.svg')\r\n        this.splitterLine.appendChild(img)\r\n        this.splitterButton = document.querySelector('.splitter-button')\r\n        this.addButtonEvent()\r\n    }\r\n    isVisibleFold = () => {\r\n        this.storageValue = localStorage.getItem(this.props.storageName)\r\n        if (this.storageValue && this.storageValue.includes(disabledDrag)) {\r\n            this.setState({ visibleFold: true })\r\n        } else {\r\n            this.setState({ visibleFold: false })\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setGlobalVar()\r\n        // 获取主板块次板块分割线一共占据的尺寸   \r\n        this.getSplitterSize()\r\n        this.isVisibleFold()\r\n    }\r\n    componentWillUnmount() {\r\n        const { storageName } = this.props\r\n        // disabledDrag 用来标识次板块尺寸为 0，此时 1. 保存上次的尺寸用于还原。2. 分割线不可拖拽。\r\n        if (storageName) {\r\n            if (this.secondaryDom.style[this.size] === `${this.foldSize}px`) {\r\n                localStorage.setItem(storageName, `${this[`secondary${this.upSize}`]}${disabledDrag}`)\r\n            } else {\r\n                localStorage.setItem(storageName, this.secondaryDom.style[this.size])\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const { vertical, foldText, showFold } = this.props\r\n        const { primaryMinSize, secondaryMinSize, secondaryInitialSize, secondaryIndex, visibleFold, visibleContent } = this.state\r\n        const childrenArr = React.Children.toArray(this.props.children)\r\n        const itemClassNames = classNames('splitter-item', vertical ? 'splitter-vertical' : 'splitter-horizontal')\r\n        // 主板块内容一直显示；当点击收齐时，次板块内容不显示。\r\n        const visibleChildren0 = (secondaryIndex === 1 || (secondaryIndex === 0 && visibleContent))\r\n        const visibleChildren1 = (secondaryIndex === 0 || (secondaryIndex === 1 && visibleContent))\r\n        return (\r\n            <SplitterLayout\r\n                {...this.props}\r\n                primaryMinSize={primaryMinSize}\r\n                secondaryMinSize={secondaryMinSize}\r\n                secondaryInitialSize={secondaryInitialSize}\r\n                onDragStart={this.onDragStart}\r\n                customClassName={this.props.customClassName ? `splitter-componented ${this.props.customClassName}` : 'splitter-componented'}\r\n                ref={this.splitter}\r\n            >\r\n                <div className={itemClassNames}>\r\n                    {\r\n                        showFold\r\n                        &&\r\n                        <>\r\n                            {secondaryIndex === 0 && visibleFold && !vertical && <div className=\"fold-panel fold-panel-left\" onClick={() => this.onFold('left')}>\r\n                                <Icon type=\"double-right\" />\r\n                                {foldText && <p>{foldText}</p>}\r\n                            </div>}\r\n                            {secondaryIndex === 0 && visibleFold && vertical && <div className=\"fold-panel fold-panel-top\" onClick={() => this.onFold('top')}>\r\n                                <Icon type=\"double-right\" />\r\n                                {foldText && <p>{foldText}</p>}\r\n                            </div>}\r\n                        </>\r\n                    }\r\n                    {visibleChildren0 && childrenArr[0]}\r\n                </div>\r\n                <div className={itemClassNames}>\r\n                    {visibleChildren1 && childrenArr[1]}\r\n                    {\r\n                        showFold\r\n                        &&\r\n                        <>\r\n                            {secondaryIndex === 1 && visibleFold && !vertical && <div className=\"fold-panel fold-panel-right\" onClick={() => this.onFold('right')}>\r\n                                <Icon type=\"double-left\" />\r\n                                {foldText && <p>{foldText}</p>}\r\n                            </div>}\r\n                            {secondaryIndex === 1 && visibleFold && vertical && <div className=\"fold-panel fold-panel-bottom\" onClick={() => this.onFold('bottom')}>\r\n                                <Icon type=\"double-left\" />\r\n                                {foldText && <p>{foldText}</p>}\r\n                            </div>}\r\n                        </>\r\n                    }\r\n                </div>\r\n            </SplitterLayout>\r\n        );\r\n    }\r\n}\r\n\r\nSplitter.propTypes = {\r\n    showFold: PropTypes.bool,\r\n    storageName: PropTypes.string,\r\n    foldText: PropTypes.string,\r\n}\r\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"prop-types\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"prop-types\",\"react\"],t):\"object\"==typeof exports?exports[\"react-splitter-layout\"]=t(require(\"prop-types\"),require(\"react\")):e[\"react-splitter-layout\"]=t(e[\"prop-types\"],e.react)}(window,function(e,t){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=2)}([function(t,n){t.exports=e},function(e,n){e.exports=t},function(e,t,n){e.exports=n(3)},function(e,t,n){\"use strict\";n.r(t);var o=n(1),r=n.n(o),i=n(0),a=n.n(i);function s(e){var t=e.size||0,n=e.percentage?\"%\":\"px\",o=\"layout-pane\",i={};return e.primary?o+=\" layout-pane-primary\":e.vertical?i.height=\"\".concat(t).concat(n):i.width=\"\".concat(t).concat(n),r.a.createElement(\"div\",{className:o,style:i},e.children)}s.propTypes={vertical:a.a.bool,primary:a.a.bool,size:a.a.number,percentage:a.a.bool,children:a.a.oneOfType([a.a.arrayOf(a.a.node),a.a.node])},s.defaultProps={vertical:!1,primary:!1,size:0,percentage:!1,children:[]};var c=s;function l(e){return(l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function f(){if(document.body.createTextRange){var e=document.body.createTextRange();e.collapse(),e.select()}else window.getSelection?window.getSelection().empty?window.getSelection().empty():window.getSelection().removeAllRanges&&window.getSelection().removeAllRanges():document.selection&&document.selection.empty()}var y=function(e){function t(e){var n,o,r;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),o=this,(n=!(r=p(t).call(this,e))||\"object\"!==l(r)&&\"function\"!=typeof r?h(o):r).handleResize=n.handleResize.bind(h(h(n))),n.handleMouseMove=n.handleMouseMove.bind(h(h(n))),n.handleMouseUp=n.handleMouseUp.bind(h(h(n))),n.handleTouchMove=n.handleTouchMove.bind(h(h(n))),n.handleSplitterMouseDown=n.handleSplitterMouseDown.bind(h(h(n))),n.state={secondaryPaneSize:0,resizing:!1},n}var n,o,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,r.a.Component),n=t,(o=[{key:\"componentDidMount\",value:function(){var e;if(window.addEventListener(\"resize\",this.handleResize),document.addEventListener(\"mouseup\",this.handleMouseUp),document.addEventListener(\"mousemove\",this.handleMouseMove),document.addEventListener(\"touchend\",this.handleMouseUp),document.addEventListener(\"touchmove\",this.handleTouchMove),void 0!==this.props.secondaryInitialSize)e=this.props.secondaryInitialSize;else{var t,n=this.container.getBoundingClientRect();t=this.splitter?this.splitter.getBoundingClientRect():{width:4,height:4},e=this.getSecondaryPaneSize(n,t,{left:n.left+(n.width-t.width)/2,top:n.top+(n.height-t.height)/2},!1)}this.setState({secondaryPaneSize:e})}},{key:\"componentDidUpdate\",value:function(e,t){t.secondaryPaneSize!==this.state.secondaryPaneSize&&this.props.onSecondaryPaneSizeChange&&this.props.onSecondaryPaneSizeChange(this.state.secondaryPaneSize),t.resizing!==this.state.resizing&&(this.state.resizing?this.props.onDragStart&&this.props.onDragStart():this.props.onDragEnd&&this.props.onDragEnd())}},{key:\"componentWillUnmount\",value:function(){window.removeEventListener(\"resize\",this.handleResize),document.removeEventListener(\"mouseup\",this.handleMouseUp),document.removeEventListener(\"mousemove\",this.handleMouseMove),document.removeEventListener(\"touchend\",this.handleMouseUp),document.removeEventListener(\"touchmove\",this.handleTouchMove)}},{key:\"getSecondaryPaneSize\",value:function(e,t,n,o){var r,i,a,s;this.props.vertical?(r=e.height,i=t.height,a=n.top-e.top):(r=e.width,i=t.width,a=n.left-e.left),o&&(a-=i/2),a<0?a=0:a>r-i&&(a=r-i);var c=r-i-(s=1===this.props.primaryIndex?a:r-i-a);return this.props.percentage&&(s=100*s/r,c=100*c/r,i=100*i/r,r=100),c<this.props.primaryMinSize?s=Math.max(s-(this.props.primaryMinSize-c),0):s<this.props.secondaryMinSize&&(s=Math.min(r-i-this.props.primaryMinSize,this.props.secondaryMinSize)),s}},{key:\"handleResize\",value:function(){if(this.splitter&&!this.props.percentage){var e=this.container.getBoundingClientRect(),t=this.splitter.getBoundingClientRect(),n=this.getSecondaryPaneSize(e,t,{left:t.left,top:t.top},!1);this.setState({secondaryPaneSize:n})}}},{key:\"handleMouseMove\",value:function(e){if(this.state.resizing){var t=this.container.getBoundingClientRect(),n=this.splitter.getBoundingClientRect(),o=this.getSecondaryPaneSize(t,n,{left:e.clientX,top:e.clientY},!0);f(),this.setState({secondaryPaneSize:o})}}},{key:\"handleTouchMove\",value:function(e){this.handleMouseMove(e.changedTouches[0])}},{key:\"handleSplitterMouseDown\",value:function(){f(),this.setState({resizing:!0})}},{key:\"handleMouseUp\",value:function(){this.setState(function(e){return e.resizing?{resizing:!1}:null})}},{key:\"render\",value:function(){var e=this,t=\"splitter-layout\";this.props.customClassName&&(t+=\" \".concat(this.props.customClassName)),this.props.vertical&&(t+=\" splitter-layout-vertical\"),this.state.resizing&&(t+=\" layout-changing\");var n=r.a.Children.toArray(this.props.children).slice(0,2);0===n.length&&n.push(r.a.createElement(\"div\",null));for(var o=[],i=0!==this.props.primaryIndex&&1!==this.props.primaryIndex?0:this.props.primaryIndex,a=0;a<n.length;++a){var s=!0,l=null;n.length>1&&a!==i&&(s=!1,l=this.state.secondaryPaneSize),o.push(r.a.createElement(c,{vertical:this.props.vertical,percentage:this.props.percentage,primary:s,size:l},n[a]))}return r.a.createElement(\"div\",{className:t,ref:function(t){e.container=t}},o[0],o.length>1&&r.a.createElement(\"div\",{role:\"separator\",className:\"layout-splitter\",ref:function(t){e.splitter=t},onMouseDown:this.handleSplitterMouseDown,onTouchStart:this.handleSplitterMouseDown}),o.length>1&&o[1])}}])&&u(n.prototype,o),i&&u(n,i),t}();y.propTypes={customClassName:a.a.string,vertical:a.a.bool,percentage:a.a.bool,primaryIndex:a.a.number,primaryMinSize:a.a.number,secondaryInitialSize:a.a.number,secondaryMinSize:a.a.number,onDragStart:a.a.func,onDragEnd:a.a.func,onSecondaryPaneSizeChange:a.a.func,children:a.a.arrayOf(a.a.node)},y.defaultProps={customClassName:\"\",vertical:!1,percentage:!1,primaryIndex:0,primaryMinSize:0,secondaryInitialSize:void 0,secondaryMinSize:0,onDragStart:null,onDragEnd:null,onSecondaryPaneSizeChange:null,children:[]};var m=y;t.default=m}])});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;;;;;AASA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiBA;AACA;AACA;AACA;AACA;AArBA;AA2BA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAyCA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAzFA;AAyFA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AArHA;AAqHA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AArIA;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAnJA;AAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAlKA;AAkKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAtLA;AAuLA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAdA;AAeA;AACA;;;AA8KA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA9QA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AACA;AAFA;AAiRA;AACA;AACA;AACA;AAHA;;;;;;;;;;;AC7RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;;;;A","sourceRoot":""}