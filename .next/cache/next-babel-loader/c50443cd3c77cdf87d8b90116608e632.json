{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\project\\\\react\\\\ssr\\\\create-next-app\\\\create-next-app\\\\components\\\\pagination\\\\cerp-pagination.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Icon, Select, Input, message } from 'antd/lib/index';\nimport PropTypes from 'prop-types';\nimport './index.less';\n\nvar Pagination =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pagination, _Component);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onPageSizeChange\", function (pageSize) {\n      var _this$props = _this.props,\n          onPageSizeChange = _this$props.onPageSizeChange,\n          total = _this$props.total,\n          falseTotal = _this$props.falseTotal;\n      var page = _this.state.page;\n\n      if (total && total != falseTotal && pageSize * page > total) {\n        page = Math.ceil(total / pageSize);\n      }\n\n      _this.setState({\n        page: page,\n        pageSize: pageSize\n      }, function () {\n        if (onPageSizeChange) {\n          onPageSizeChange(page, pageSize);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPrev\", function () {\n      var _this$state = _this.state,\n          page = _this$state.page,\n          pageSize = _this$state.pageSize;\n      var onPageChange = _this.props.onPageChange;\n\n      if (page <= 1) {\n        message.warning('已是第一页！');\n        return;\n      }\n\n      _this.setState({\n        page: page - 1\n      }, function () {\n        if (onPageChange) {\n          onPageChange(page - 1, pageSize);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNext\", function () {\n      var _this$state2 = _this.state,\n          page = _this$state2.page,\n          pageSize = _this$state2.pageSize;\n      var _this$props2 = _this.props,\n          total = _this$props2.total,\n          onPageChange = _this$props2.onPageChange;\n      var totalPage = Math.ceil(total / pageSize);\n\n      if (totalPage && page == totalPage) {\n        message.warning('已是最后一页！');\n        return;\n      }\n\n      _this.setState({\n        page: page + 1\n      }, function () {\n        if (onPageChange) {\n          onPageChange(page + 1, pageSize);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFirst\", function () {\n      var _this$state3 = _this.state,\n          page = _this$state3.page,\n          pageSize = _this$state3.pageSize;\n      var onPageChange = _this.props.onPageChange;\n\n      if (page == 1) {\n        message.warning('已是第一页！');\n        return;\n      }\n\n      _this.setState({\n        page: 1\n      }, function () {\n        if (onPageChange) {\n          onPageChange(1, pageSize);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLast\", function () {\n      var _this$state4 = _this.state,\n          page = _this$state4.page,\n          pageSize = _this$state4.pageSize;\n      var _this$props3 = _this.props,\n          total = _this$props3.total,\n          onPageChange = _this$props3.onPageChange,\n          falseTotal = _this$props3.falseTotal; // 检验当前是否为最后一页\n\n      var totalPage = Math.ceil(total / pageSize);\n\n      if (totalPage && page == totalPage) {\n        message.warning('已是最后一页！');\n        return;\n      } // 跳至最后页 使用falseTotal作为总页数 但是不需要将总页数显示\n\n\n      var pageLast = Math.ceil(falseTotal / pageSize);\n\n      if (onPageChange) {\n        onPageChange(pageLast, pageSize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputPage\", function (e) {\n      e.preventDefault();\n      var page = e.currentTarget.value;\n\n      if (page >= 0) {\n        _this.setState({\n          page: page\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onPagePressEnter\", function (e) {\n      e.preventDefault();\n      var pageSize = _this.state.pageSize;\n      var _this$props4 = _this.props,\n          total = _this$props4.total,\n          onPageChange = _this$props4.onPageChange,\n          falseTotal = _this$props4.falseTotal;\n      var totalPage = Math.ceil(total / pageSize);\n      var page = e.currentTarget.value - 0;\n\n      if (totalPage && total != falseTotal) {\n        if (page > totalPage) {\n          _this.setState({\n            page: totalPage\n          }, function () {\n            if (onPageChange) {\n              onPageChange(totalPage, pageSize);\n            }\n          });\n\n          message.warning(\"已设置为最大页数\");\n          return;\n        } else if (page == totalPage) {\n          return;\n        } else if (page < totalPage) {\n          if (page <= 1) {\n            page = 1;\n          }\n        }\n      }\n\n      if (page) {\n        _this.setState({\n          page: page\n        }, function () {\n          if (onPageChange) {\n            onPageChange(page, pageSize);\n          }\n        });\n      } else {\n        _this.setState({\n          page: ''\n        });\n\n        message.warning(\"请输入正确的页数!\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRefreshTotal\", function () {\n      var refreshTotal = _this.props.refreshTotal;\n\n      if (refreshTotal) {\n        refreshTotal().then(function (total) {\n          if (total) {\n            _this.setState({\n              total: total\n            });\n          }\n        });\n      }\n    });\n\n    _this.state = {\n      page: props.page,\n      // 显示当前在第几页\n      pageSizeOptions: props.pageSizeOptions,\n      // 可选的每页大小数组\n      pageSize: props.pageSize || props.pageSizeOptions[0],\n      // 每页大小\n      total: props.total // 真实总条数\n\n    };\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var total = nextProps.total,\n          falseTotal = nextProps.falseTotal,\n          onPageChange = nextProps.onPageChange,\n          pageSize = nextProps.pageSize,\n          page = nextProps.page; //（如果不是最后页 total始终为1000000）（如果当前页是最后页 total为真实总条数）\n\n      if (this.props.page == page && this.props.pageSize == pageSize) return false;\n\n      if (total && total != falseTotal) {\n        var _page = Math.ceil(total / this.state.pageSize);\n\n        this.setState({\n          page: _page\n        }, function () {\n          if (onPageChange) {\n            onPageChange(_page, pageSize);\n          }\n        });\n      }\n    } // 改变每页大小 理论上当前页不变 但是如果 pageSize*page>total 则需要重新计算当前页 Select回调  （重点）\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state5 = this.state,\n          page = _this$state5.page,\n          pageSizeOptions = _this$state5.pageSizeOptions,\n          pageSize = _this$state5.pageSize,\n          total = _this$state5.total;\n      var trueTotalPage = total ? Math.ceil(total / pageSize) : null;\n      return React.createElement(\"div\", {\n        className: \"erp-pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Select, {\n        size: \"small\",\n        style: {\n          width: 100\n        },\n        value: pageSize,\n        onChange: this.onPageSizeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, pageSizeOptions.map(function (item, i) {\n        return React.createElement(Select.Option, {\n          key: i,\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, item + '条/页');\n      }))), React.createElement(\"div\", {\n        className: \"page-jump-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"step-backward\",\n        title: \"\\u7B2C\\u4E00\\u9875\",\n        onClick: this.onFirst,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"caret-left\",\n        title: \"\\u4E0A\\u4E00\\u9875\",\n        onClick: this.onPrev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u7B2C \", React.createElement(Input // ref={input => this.pageInput = input} />\n      , {\n        size: \"small\",\n        style: {\n          width: '50px'\n        },\n        onChange: this.onInputPage,\n        onPressEnter: this.onPagePressEnter,\n        title: page,\n        value: page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), \" \\u9875\"), React.createElement(Icon, {\n        type: \"caret-right\",\n        title: \"\\u4E0B\\u4E00\\u9875\",\n        onClick: this.onNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"step-forward\",\n        title: \"\\u6700\\u540E\\u9875\",\n        onClick: this.onLast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"page-total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u5171\"), \" \", React.createElement(Input, {\n        className: \"text-middle\",\n        size: \"small\",\n        addonAfter: React.createElement(Icon, {\n          className: \"redo-btn\",\n          size: \"small\",\n          type: \"redo\",\n          onClick: this.onRefreshTotal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }),\n        title: total,\n        style: {\n          width: 80\n        },\n        value: total,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), \" \", React.createElement(\"span\", {\n        className: \"text-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"\\u6761\\u8BB0\\u5F55\"))), React.createElement(\"div\", {\n        className: \"page-total-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"\\u5171\"), React.createElement(Input, {\n        className: \"text-middle\",\n        size: \"small\",\n        style: {\n          width: '50px'\n        },\n        title: trueTotalPage,\n        value: trueTotalPage,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"text-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"\\u9875\"))));\n    }\n  }]);\n\n  return Pagination;\n}(Component);\n\n_defineProperty(Pagination, \"defaultProps\", {\n  page: 1,\n  total: null,\n  falseTotal: 1000000,\n  pageSizeOptions: [50, 100, 200, 500]\n});\n\n_defineProperty(Pagination, \"propTypes\", {\n  page: PropTypes.number,\n  total: PropTypes.number,\n  falseTotal: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  onPageChange: PropTypes.func,\n  refreshTotal: PropTypes.func\n});\n\nexport default Pagination;","map":{"version":3,"sources":["E:/project/react/ssr/create-next-app/create-next-app/components/pagination/cerp-pagination.js"],"names":["React","Component","Icon","Select","Input","message","PropTypes","Pagination","props","pageSize","onPageSizeChange","total","falseTotal","page","state","Math","ceil","setState","onPageChange","warning","totalPage","pageLast","e","preventDefault","currentTarget","value","refreshTotal","then","pageSizeOptions","nextProps","nextContext","trueTotalPage","width","map","item","i","onFirst","onPrev","onInputPage","onPagePressEnter","onNext","onLast","onRefreshTotal","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Icon, Select, Input, message} from 'antd/lib/index'\r\nimport PropTypes from 'prop-types'\r\nimport './index.less'\r\n\r\nclass Pagination extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            page:props.page,                                        // 显示当前在第几页\r\n            pageSizeOptions:props.pageSizeOptions,                  // 可选的每页大小数组\r\n            pageSize:props.pageSize||props.pageSizeOptions[0],      // 每页大小\r\n            total:props.total,                                      // 真实总条数\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        page:1,\r\n        total:null,\r\n        falseTotal:1000000,\r\n        pageSizeOptions: [50,100,200,500]\r\n    }\r\n\r\n    static propTypes = {\r\n        page:PropTypes.number,\r\n        total:PropTypes.number,\r\n        falseTotal:PropTypes.number,\r\n        onPageSizeChange: PropTypes.func,\r\n        onPageChange: PropTypes.func,\r\n        refreshTotal: PropTypes.func,\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const {total,falseTotal,onPageChange,pageSize,page} = nextProps;\r\n        //（如果不是最后页 total始终为1000000）（如果当前页是最后页 total为真实总条数）\r\n        if(this.props.page == page && this.props.pageSize == pageSize) return false;\r\n        if(total&&total!=falseTotal){\r\n            let page = Math.ceil(total/this.state.pageSize);\r\n            this.setState({page},()=>{\r\n                if(onPageChange){\r\n                    onPageChange(page,pageSize);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // 改变每页大小 理论上当前页不变 但是如果 pageSize*page>total 则需要重新计算当前页 Select回调  （重点）\r\n    onPageSizeChange = (pageSize) => {\r\n        const {onPageSizeChange,total,falseTotal} = this.props;\r\n        let {page} = this.state;\r\n        if(total&&total!=falseTotal&&pageSize*page>total){\r\n            page = Math.ceil(total/pageSize);\r\n        }\r\n        this.setState({page,pageSize},()=>{\r\n            if(onPageSizeChange){\r\n                onPageSizeChange(page,pageSize);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // 上一页\r\n    onPrev = () => {\r\n        const {page,pageSize} = this.state;\r\n        const {onPageChange} = this.props;\r\n        if(page <= 1) {message.warning('已是第一页！');return}\r\n        this.setState({page:page-1},()=>{\r\n            if(onPageChange){\r\n                onPageChange(page-1,pageSize);\r\n            }\r\n        })\r\n    }\r\n\r\n    // 下一页\r\n    onNext = () => {\r\n        const {page,pageSize} = this.state;\r\n        const {total,onPageChange} = this.props;\r\n        const totalPage = Math.ceil(total/pageSize);\r\n        if( totalPage && page == totalPage ){message.warning('已是最后一页！');return}\r\n        this.setState({page:page + 1},()=>{\r\n            if(onPageChange){\r\n                onPageChange(page+1,pageSize);\r\n            }\r\n        })\r\n    }\r\n\r\n    // 跳到第一页\r\n    onFirst = () => {\r\n        const {page,pageSize} = this.state;\r\n        const {onPageChange} = this.props;\r\n        if(page == 1) {message.warning('已是第一页！');return}\r\n        this.setState({page:1},()=>{\r\n            if(onPageChange){\r\n                onPageChange(1,pageSize);\r\n            }\r\n        })\r\n    }\r\n\r\n    // 跳到最后一页 (重点）\r\n    onLast = () => {\r\n        const {page,pageSize} = this.state;\r\n        const {total,onPageChange,falseTotal} = this.props;\r\n        // 检验当前是否为最后一页\r\n        const totalPage = Math.ceil(total/pageSize);\r\n        if( totalPage && page == totalPage ){message.warning('已是最后一页！');return}\r\n\r\n        // 跳至最后页 使用falseTotal作为总页数 但是不需要将总页数显示\r\n        const pageLast = Math.ceil(falseTotal/pageSize);\r\n        if(onPageChange){\r\n            onPageChange(pageLast,pageSize);\r\n        }\r\n    }\r\n\r\n    // 输入第几页页码\r\n    onInputPage = (e) => {\r\n        e.preventDefault();\r\n        let page = e.currentTarget.value;\r\n        if(page >= 0){\r\n            this.setState({page});\r\n        }\r\n    }\r\n\r\n    // 回车查找输入页的数据 （重点）\r\n    onPagePressEnter = (e) =>{\r\n        e.preventDefault();\r\n        const {pageSize} = this.state;\r\n        const {total,onPageChange,falseTotal} = this.props;\r\n        const totalPage = Math.ceil(total/pageSize);\r\n        let page = e.currentTarget.value - 0;\r\n\r\n        if(totalPage&&total!=falseTotal){\r\n            if(page > totalPage){\r\n                this.setState({page: totalPage},()=>{\r\n                    if(onPageChange){\r\n                        onPageChange(totalPage,pageSize)\r\n                    }\r\n                })\r\n                message.warning(\"已设置为最大页数\")\r\n                return;\r\n            }else if(page == totalPage){\r\n                return;\r\n            }else if(page < totalPage){\r\n                if(page <= 1){\r\n                    page = 1\r\n                }\r\n            }\r\n        }\r\n\r\n        if(page){\r\n            this.setState({page},()=>{\r\n                if(onPageChange){\r\n                    onPageChange(page,pageSize)\r\n                }\r\n            });\r\n        }else{\r\n            this.setState({page: ''});\r\n            message.warning(\"请输入正确的页数!\")\r\n        }\r\n    }\r\n\r\n    // 刷新获取总条数\r\n    onRefreshTotal = () => {\r\n        const {refreshTotal} = this.props;\r\n        if(refreshTotal){\r\n            refreshTotal().then(total=>{\r\n                if(total){\r\n                    this.setState({total});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {page,pageSizeOptions,pageSize,total} = this.state;\r\n\r\n        const trueTotalPage = total?Math.ceil(total/pageSize):null;\r\n\r\n        return (<div className=\"erp-pagination\">\r\n            <div>\r\n                <Select\r\n                    size=\"small\"\r\n                    style={{width:100}}\r\n                    value={pageSize}\r\n                    onChange={this.onPageSizeChange}\r\n                >\r\n                    {pageSizeOptions.map((item,i)=>{return <Select.Option key={i} value={item}>{item + '条/页'}</Select.Option>})}\r\n                </Select>\r\n            </div>\r\n            <div className=\"page-jump-to\">\r\n                <Icon type=\"step-backward\" title=\"第一页\" onClick={this.onFirst} />\r\n                <Icon type=\"caret-left\" title=\"上一页\" onClick={this.onPrev} />\r\n                <span>\r\n          第 <Input\r\n                    // ref={input => this.pageInput = input} />\r\n                    size='small'\r\n                    style={{width:'50px'}}\r\n                    onChange={this.onInputPage}\r\n                    onPressEnter={this.onPagePressEnter}\r\n                    title={page}\r\n                    value={page}\r\n                /> 页\r\n        </span>\r\n                <Icon type=\"caret-right\" title=\"下一页\" onClick={this.onNext} />\r\n                <Icon type=\"step-forward\" title=\"最后页\" onClick={this.onLast} />\r\n            </div>\r\n            <div className=\"page-total\">\r\n        <span>\r\n          <span className=\"text-middle\">共</span> <Input\r\n            className=\"text-middle\"\r\n            size='small'\r\n            addonAfter={<Icon\r\n                className=\"redo-btn\"\r\n                size=\"small\"\r\n                type=\"redo\"\r\n                onClick={this.onRefreshTotal}\r\n            />}\r\n            title={total}\r\n            style={{width:80}}\r\n            value={total}\r\n            readOnly\r\n        /> <span className=\"text-middle\">条记录</span>\r\n        </span>\r\n            </div>\r\n            <div className=\"page-total-page\">\r\n        <span>\r\n          <span className=\"text-middle\">共</span>\r\n          <Input\r\n              className=\"text-middle\"\r\n              size='small'\r\n              style={{width:'50px'}}\r\n              title={trueTotalPage}\r\n              value={trueTotalPage}\r\n              readOnly\r\n          />\r\n          <span className=\"text-middle\">页</span>\r\n        </span>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}